---
title: "Reprodicible_Final_Report"
format:
  html:
    code-overflow: wrap
editor: visual
---

```{r}
options(repos = c(CRAN = "https://cran.r-project.org"))
```

# Predicting Traffic Copper Cable Theft and Its Contributing Factors: A Reproducible Time-Series Modeling Approach

## Abstract

Traffic copper cable theft has become a significant challenge for transportation infrastructure worldwide, leading to substantial economic losses, safety risks, and operational disruptions. This study employs advanced time-series modeling techniques to systematically analyze the key drivers of copper cable theft, including economic, policy, and seasonal factors. Using long-term data from New South Wales (2010–2023), the study adopts log-log regression with autoregressive terms (log-log + AR(p)) as a baseline model and further integrates the Autoregressive Integrated Moving Average with Exogenous Variables (ARIMAX) and an ARIMA-Extreme Gradient Boosting (XGBoost) ensemble model to evaluate the impact of copper price fluctuations, overall theft rates, and legislative interventions on theft trends. The study also compares the predictive performance of these models. Results indicate that rising copper prices and higher overall theft rates significantly contribute to traffic copper cable theft. Although legislation effectively suppresses theft in the short term, its long-term deterrence is constrained by black market demand and the adaptability of organized crime networks. Additionally, theft incidents exhibit seasonal fluctuations, with a notable increase in certain months, enhancing the predictive accuracy of models when external influences are not fully captured. Comparative analysis shows that ARIMAX (1,0,1) outperforms other models in capturing theft trends and seasonal variations, demonstrating superior robustness and generalizability. Based on these findings, this study highlights the critical role of dynamic legislative adjustments, enhanced law enforcement coordination, and infrastructure-based prevention measures in mitigating theft risks. It also recommends integrating high-frequency crime data and market dynamics analysis to optimize policy interventions. The conclusions provide a scientific foundation for data-driven crime prevention strategies, offering policymakers targeted and resource-efficient measures to combat traffic copper cable theft. This paper is totally reproducible. The data, R script and dynamic document for generating this paper are publicly available.

***Keywords:** Transportation asset theft; Copper cable theft; Time series analysis; XGBoost; Reproducible research*

## List of Abbreviations

| Abbreviation | Full name |
|----|----|
| ACF | Autocorrelation Function |
| ADF | Augmented Dickey-Fuller Test |
| AIC | Akaike Information Criterion |
| ABS | Australian Bureau of Statistics |
| AR | Autoregressive Term |
| ARIMA | Autoregressive Integrated Moving Average |
| ARIMAX | Autoregressive Integrated Moving Average with Exogenous Variables |
| BIC | Bayesian Information Criterion |
| CEIC | CEIC Data (formerly China Economic Information Center) |
| CPI | Consumer Price Index |
| GACC | General Administration of Customs of China |
| GDP | Gross Domestic Product |
| I | Integrated Term (in ARIMA) |
| ISRI | Institute of Scrap Recycling Industries |
| KPSS | Kwiatkowski-Phillips-Schmidt-Shin Test |
| MA | Moving Average Term |
| MAE | Mean Absolute Error |
| MAPE | Mean Absolute Percentage Error |
| ME | Mean Error |
| MPE | Mean Percentage Error |
| NSW | New South Wales |
| OLS | Ordinary Least Squares |
| PACF | Partial Autocorrelation Function |
| RMSE | Root Mean Square Error |
| TMR | Transport and Main Roads (Australia) |
| VAR | Vector Autoregression |
| VIF | Variance Inflation Factor |
| XGBoost | Extreme Gradient Boosting |

~Note: This table provides a list of abbreviations used throughout the article for clarity and reference~

## 1. Introduction

Rapid global industrialization and urbanization have significantly increased the demand for copper resources. Continuous increases in copper prices have intensified the phenomenon of traffic copper cable theft ([Sidebottom, Belur, Bowers, Thompson, & Johnson, 2011]{.underline}). The primary targets of traffic copper cable thefts are copper cables in traffic signaling systems and lighting facilities. Criminals typically disguise themselves as maintenance personnel, committing theft in poorly supervised areas to reduce detection risks by law enforcement agencies ([Modipa, 2022]{.underline}). Thefts generally access underground facilities through maintenance hole covers, use specialized equipment to cut and steal copper cables, and sell them via scrap metal recyclers or black-market channels ([Pretorius, 2015]{.underline}), demonstrating the organized nature of these criminals ([Paoli, 2017]{.underline}).

Traffic copper cable theft has become a global issue. First, such theft damages transportation infrastructure, disrupting railway, road, and electrical systems, leading to traffic signal failures, congestion, frequent accidents, and substantial economic losses ([Modipa, 2022]{.underline}). Second, such criminal activity seriously threatens public safety by significantly increasing the risk of electric shocks and accidental injuries to pedestrians, drivers, and maintenance personnel ([Kooi, 2010]{.underline}). From an economic perspective, the cost of repairing damaged infrastructure far exceeds the value of the stolen copper cables. For instance, the California Department of Transportation, District 7's copper cable repair expenses increased from \$507,000 in 2020 to \$1,232,000 in 2022 ([Yazdani, 2024]{.underline}).

Legislation effectively deters metal theft, although it cannot eliminate such crimes([Schoenfelder & Center, 2009]{.underline}). By analyzing metal theft legislation in New South Wales (Australia) ([New South Wales Government, 2016]{.underline}), the United Kingdom ([Office, 2017]{.underline}), the United States ([Congressional Budget Office, 2013]{.underline}), and South Africa ([South African Government, 2022]{.underline}), this study identifies the following standard legislative measures: (1) mandatory recording of transaction details and restrictions on cash transactions; (2) implementation of certification and licensing systems for scrap metal recyclers; (3) establishment of specialized law enforcement agencies and strengthening inter-departmental cooperation to create efficient crime-information sharing network. These legislative measures enhance market regulation, increase the cost of crime, and improve law enforcement collaboration, thereby reducing traffic copper cable theft [(Kooi, 2010]{.underline}). However, legislation alone cannot fully eliminate crime and should be paired with focused deterrence strategies. Analyzing crime patterns and policy effectiveness will help create effective prevention strategies ([Braga & Weisburd, 2011]{.underline}).

Technological solutions and physical preventive strategies can systematically enhance theft prevention effectiveness. Surveillance systems, access control mechanisms, and motion detection technologies effectively restrict unauthorized access to maintenance holes and enable real-time monitoring of facilities ([Muhle Mthombeni, Bheki Makhanya, & Harm, 2024]{.underline}). In addition, replacing copper cables with alternative materials can reduce the intrinsic value of theft targets, thereby eliminating criminal motivation([Andrews, 2020]{.underline}). However, resource limitations often constrain the comprehensive implementation of preventive measures. For example, Queensland, Australia, faced high costs in implementing anti-theft measures for all cable maintenance hole covers, highlighting practical challenges posed by limited resources and further emphasizing the importance of conducting detailed research and scientifically allocating resources ([Queensland Transport and Resources Commission, 2023]{.underline}).

Current research on scrap metal theft mainly covers general metal theft and some studies on copper theft in railway systems. However, quantitative research on traffic copper cable theft is limited, conducting independent quantitative research in this area is essential for creating effective crime prevention strategies.

This study combines crime economics, crime adaptation theory, and routine activity theory to analyze traffic copper cable theft. It utilizes long-term time series data from 2010 to 2023 in New South Wales, incorporating various economic, social, market, and policy factors. A rigorous variable selection process featuring Granger causality analysis, collinearity diagnostics, and significance tests helped identify key factors such as copper price fluctuations, overall theft rates, legislative interventions, and seasonal variations in theft.

This paper also compares the log-log+AR(p) model with the newly introduced ARIMAX and ARIMA+XGBoost models. Results show that the ARIMAX model outperforms the others in capturing crime trends and seasonal patterns, demonstrating better predictive accuracy and interpretability.

Based on empirical analysis, this study provides a scientific foundation for crime prevention strategies in traffic-specific copper cable theft. It emphasizes the role of targeted law enforcement, adaptive legislative adjustments, cross-agency collaborative governance, and optimized resource allocation in curbing such theft incidents. Furthermore, it offers data-driven support for developing more targeted governance measures to address these crimes effectively.

The remainder of the paper is structured as follows. Section 2 describes the data sources and preprocessing methods. Section 3 outlines the methodological framework of the analysis model. Section 4 presents findings on the impacts of economic, social, policy, and seasonal factors on traffic copper cable theft, along with a comparison of model performance. Section 5 discusses the implications of the findings and suggests recommendations for future anti-theft strategies. Section 6 concludes with strategies for mitigating theft through data-driven approaches.

## 2. Literature review

Existing research on metal theft typically employs traditional regression methods to analyze the relationship between external factors and copper cable theft. [Sidebottom, Belur, Bowers, Tompson, and Johnson (2011)]{.underline} applied ordinary least squares (OLS) regression with an AR (1) structure. Their findings confirmed a significant positive correlation between copper prices and copper cable theft incidents in the British railway system and no significant relationship between unemployment rates and theft occurrences. Similarly, [Sidebottom, Ashby, and Johnson (2014)]{.underline} utilized a log-log regression model with an AR (1) structure to examine copper theft incidents in the United States from 2006 to 2013. Their results also indicated a significant positive correlation between copper prices and theft incidents, whereas unemployment and home foreclosure rates did not significantly correlate with copper theft.

Nevertheless, traditional regression models often encounter autocorrelation issues when analyzing time series data ([Ludlow & Perez, 2018]{.underline}). Previous studies commonly address residual autocorrelation through predetermined AR (1) structures ([Sidebottom et al., 2011, 2014]{.underline}). However, when higher-order autocorrelation is present in data, relying solely on AR (1) becomes insufficient ([Ludlow & Perez, 2018]{.underline}). Researchers must manually identify appropriate lag lengths and verify residual independence, which increases the complexity of model fitting.

Routine activity theory posits that criminal opportunities fluctuate seasonally due to variations in social activities ([McDowall, Loftin, & Pate, 2011]{.underline}). Existing studies on general metal theft have not explicitly investigated seasonal patterns of traffic copper cable theft. Additionally, global economic imbalances, industrialization, and structural changes in international market demand contribute to increased scrap metal theft incidents ([Bennett, 2008]{.underline}). However, qualitative research exploring the relationship between international economic activities and traffic copper cable theft remains limited.

This study uses the ARIMAX model (Autoregressive Integrated Moving Average with Exogenous Variables) to analyze the autocorrelation structure of traffic copper cable theft over time and assess the impact of external drivers. The ARIMA model relies on past dependencies to forecast future trends. ARIMAX enhances this approach by including exogenous variables, improving predictive accuracy, and reducing omitted variable bias ([Haydier, Albarwari, & Ali, 2023]{.underline}). Its linear structure facilitates the interpretability of complex relationships ([Chen & Tanuwijaya, 2011]{.underline}), contributing to its widespread application across disciplines such as economics, agriculture, and engineering ([Askari & Montazerin, 2015]{.underline}).

Due to the complex factors affecting traffic copper cable theft, traditional linear statistical models are limited in addressing nonlinear relationships and high-dimensional features. This study develops a hybrid ARIMA-XGBoost model to enhance predictive capability. XGBoost is known for its high accuracy, feature selection, and robustness to missing data, and it has lower computational costs than deep learning models like LSTM. However, it lacks a mechanism for modeling autocorrelation in time series ([Chen & Guestrin, 2016]{.underline}). The hybrid model combines ARIMA for identifying linear trends and short-term dependencies with XGBoost to capture nonlinear relationships, improving predictive performance.

## 3. Data

To cope with this serious issue, some states have introduced legislation changes. For instance, New South Wales has introduced Scrap Metal Industry Act, effective from 1 March 2017, which prohibits scrap metal dealers from paying cash for scrap metal and also requires scrap metal dealers to keep and maintain records of transactions for buying scrap metal, including details of the person selling the scrap metal. Imagine you are asked to assess such legislation changes’ effectiveness in preventing copper theft. The copper theft data from January 2010 to May 2023 in New South Wales.

NSW has been proactive in implementing stringent countermeasures to curb metal theft. In March 2017, the state government passed legislation that tightened regulations on scrap metal trading. Key aspects of this legislation included requiring scrap metal dealers to register with the Police Commissioner, prohibiting cash transactions for scrap metal for easier traceability, and mandating that dealers maintain detailed transaction records. These measures have aimed to reduce the anonymity and ease with which stolen metals can be sold, potentially reducing theft incidents.

This study is based on traffic copper cable theft data from January 2010 to May 2023 in New South Wales, provided by NSW Bureau of Crime Statistics & Research. . and integrates to comprehensively assess the determinants of traffic copper cable theft, numerous socioeconomic and environmental factors are also considered, including:

1\) Global Copper Price ([Macrotrends, 2023]{.underline}): Copper price fluctuations are closely linked to metal theft ([Depken & Stephenson, 2016]{.underline}), reflecting economic incentives for theft. This study employs Macrotrends data (USD/pound, updated monthly) to analyze its impact on theft behavior.

2\) China’s Scrap Copper Imports ([CEIC, 2023]{.underline}): China is the world’s largest copper consumer ([Renaud, Manley, & Nassar, 2023]{.underline}), and stolen copper cables may enter its black market ([Geldenhuys, 2024]{.underline}). This study utilizes CEIC data (thousand tons, updated monthly), which is based on statistics from the General Administration of Customs of China (GACC), classified under the Harmonized System Coding System, and converted using the CIF valuation method.

3\) Consumer Price Index (CPI) of Australia ([Australian Bureau of Statistics, 2024]{.underline}): CPI reflects inflation levels, where an increase may accelerate offenders’ financial depletion, shortening the time between offenses and increasing theft frequency. The data is recorded as an index and updated quarterly.

4\) Unemployment Rate in New South Wales ([Australian Bureau of Statistics, 2025]{.underline}): The unemployment rate is widely recognized as a key economic determinant of criminal behavior, where fluctuations may exacerbate economic hardship and drive criminal activities ([Sidebottom et al., 2011, 2014]{.underline}). This study employs unemployment data from the Australian Bureau of Statistics (ABS) (percentage, updated monthly) to assess the economic pressure on traffic copper cable theft incidents.

5\) Overall Theft Rate: Offenders tend to operate in high-crime areas ([Reiss, 1986]{.underline}). This study calculates the overall theft rate using total theft incidents in New South Wales ([Bureau of Crime Statistics and Research, 2024]{.underline}) and the total population of New South Wales ([Australian Bureau of Statistics, 2024b]{.underline}). This rate is computed as the total theft incidents divided by the total state population (cases per capita, updated monthly) to evaluate the broader criminal environment’s impact on traffic copper cable theft.

6\) Policy Intervention Variables (Assigned): This study assesses the impact of the Scrap Metal Act, enacted in March 2017, on theft behavior. It includes a binary variable (0 = pre-legislation, 1 = post-legislation) to capture immediate effects and a cumulative monthly variable (0 = pre-legislation, increasing incrementally post-legislation) to measure long-term effects.

7\) Monthly Dummy Variables (Derived): Based on the Routine Activity Theory, criminal activity may exhibit seasonal fluctuations ([McDowall, Loftin, & Pate, 2011]{.underline}). This study constructs monthly dummy variables (case count, updated monthly), using January as the reference month to quantify deviations in traffic copper cable theft across different months, enabling an assessment of seasonal variations.

By incorporating these variables, this study systematically examines the combined influence of economic, market, social, and policy factors on traffic copper cable theft.

Meanwhile, this study uses the relative percentage change method to analyze variability among factors, each variable's change is calculated based on its median from January 2010 to July 2021 to ensure comparability.

To maintain consistent temporal resolution, Australian CPI is converted to monthly values through linear interpolation. All standardized variables are combined into a single dataset for statistical modeling and analysis

```{r}
################本次研究需要的工具#################
# Required R packages
install.packages(c("readxl", "dplyr", "ggplot2", "lmtest", "car", "sandwich", "devtools", "orcutt", "nlme", "knitr", "lubridate", "here", "tidyr", "purrr", "FinTS", "forecast", "xgboost", "Matrix", "webshot2", "stringr", "zoo", "readr", "ggpubr"))

# Load the necessary libraries
library(readxl) 
library(dplyr) 
library(ggplot2) 
library(lmtest) 
library(car) 
library(sandwich) 
library(devtools) 
library(orcutt) 
library(nlme) 
library(knitr) 
library(lubridate) 
library(here)
library(tidyr)
library(purrr)
library(forecast)
library(FinTS)
library(xgboost)
library(Matrix)
library(webshot2)
library(gt)
library(stringr)
library(zoo)
library(readr)
library(ggpubr)
```

```{r}
################################
####Copper_price的数据预处理####
################################
# Load raw copper price data
df_raw_Price <- read_csv(here("01_Data", "03_Raw_original_data", "03_chart_20250721T044019.csv"))

# Convert date format
df_raw_Price <- df_raw_Price %>%
  mutate(Date = mdy(Date))  # Original format: MM/DD/YYYY

# Filter data to the target analysis period
df_filtered_Price <- df_raw_Price %>%
  filter(Date >= as.Date("2010-01-01") & Date <= as.Date("2023-06-01"))

# Aggregate to monthly median copper prices
monthly_copper <- df_filtered_Price %>%
  mutate(month = floor_date(Date, "month")) %>%
  group_by(month) %>%
  summarise(Copper_price = median(Value, na.rm = TRUE)) %>%
  ungroup()

###############################
##Theft_incidents的数据预处理##
###############################
# Load raw theft data
df_theft <- read_excel(here("01_Data", "03_Raw_original_data", "05_Incident_by_NSW.xlsx"))

# Define target subcategories
target_subcategories <- c(
  "Break and enter dwelling",
  "Break and enter non-dwelling",
  "Receiving or handling stolen goods",
  "Motor vehicle theft",
  "Steal from motor vehicle",
  "Steal from retail store",
  "Steal from dwelling",
  "Steal from person",
  "Stock theft",
  "Fraud",
  "Other theft"
)

# Filter to target subcategories
df_filtered <- df_theft %>%
  filter(Subcategory %in% target_subcategories)

# Extract time-related columns and reshape to long format
all_time_cols <- names(df_filtered)[6:ncol(df_filtered)]

monthly_theft <- df_filtered %>%
  select(all_of(all_time_cols)) %>%
  summarise(across(everything(), ~ sum(.x, na.rm = TRUE))) %>%
  pivot_longer(cols = everything(), names_to = "date", values_to = "Theft_rate") %>%
  mutate(date = as.Date(as.numeric(date), origin = "1899-12-30"))

# Filter to the target time range
monthly_theft <- monthly_theft %>%
  filter(date >= as.Date("2010-01-01") & date <= as.Date("2023-06-01"))
######################
##Unwork的数据预处理##
######################
df_unwork <- read_excel(
  path = here("01_Data", "03_Raw_original_data", "02_6202004.xlsx"),
  sheet = "Data1",
  col_names = FALSE
)

monthly_unwork <- df_unwork %>%
  dplyr::slice(11:nrow(.)) %>%
  select(date_raw = 1, unwork_rate = 49) %>%
  mutate(
    date = as.Date(as.numeric(date_raw), origin = "1899-12-30"),
    unwork_rate = as.numeric(unwork_rate)
  ) %>%
  filter(date >= as.Date("2010-01-01") & date <= as.Date("2023-06-01")) %>%
  select(date, unwork_rate)
#######################
###Scrap的数据预处理###
#######################
df_scrap <- read_excel(
  path = here("01_Data", "03_Raw_original_data", "06_Non_Ferrous_Metal_Import_Copper_Waste.xlsx"),
  col_names = FALSE
)

monthly_scrap <- df_scrap %>%
  dplyr::slice(30:n()) %>%
  select(date_raw = 1, value_raw = 2) %>%
  mutate(
    date = as.Date(as.numeric(date_raw), origin = "1899-12-30"),
    copper_scrap_import = as.numeric(value_raw)
  ) %>%
  filter(!is.na(date) & !is.na(copper_scrap_import)) %>%
  filter(date >= as.Date("2010-01-01") & date <= as.Date("2023-06-01")) %>%
  select(date, copper_scrap_import)
########################################
###Copper_theft的数据预处理与数据合并###
########################################
traffic_theft <- read_excel(
  here("01_Data", "03_Raw_original_data", "04_copper_theft_NSW.xlsx")
) %>%
  rename(date = Date, time_unit = total_t) %>%
  mutate(date = as.Date(date))
#####################
#####更改变量名称####
#####################
# Rename variables for consistent merging
monthly_theft <- monthly_theft %>% rename(total_theft = Theft_rate)
monthly_copper <- monthly_copper %>% rename(date = month)

# Ensure all date columns are in Date format
monthly_copper$date <- as.Date(monthly_copper$date)
monthly_scrap$date <- as.Date(monthly_scrap$date)
monthly_unwork$date <- as.Date(monthly_unwork$date)
monthly_theft$date <- as.Date(monthly_theft$date)

# Merge all datasets
combined_data <- traffic_theft %>%
  left_join(monthly_copper, by = "date") %>%
  left_join(monthly_scrap, by = "date") %>%
  left_join(monthly_unwork, by = "date") %>%
  left_join(monthly_theft, by = "date")

# Inspect the merged data
str(combined_data)
summary(combined_data)

# Rename variables for clarity and standardization
combined_data <- combined_data %>%
  rename(
    Scrap_Imports_CN = copper_scrap_import,
    Unwork_NSW = unwork_rate,
    Total_theft = total_theft
  )

# Keep only useful final datasets and remove all intermediate variables
useful_vars <- c("monthly_copper", "monthly_scrap", "monthly_theft", "monthly_unwork", "combined_data")
rm(list = setdiff(ls(), useful_vars))
```

```{r}
# Extract month information
combined_data <- combined_data %>% mutate(Month = as.factor(month(date)))

# Create lagged variables
combined_data <- combined_data %>% mutate(intervention.lag = lag(intervention, 1))
combined_data <- combined_data %>% mutate(Total_theft.lag = lag(Total_theft, 1))
combined_data <- combined_data %>% mutate(Copper_price.lag = lag(Copper_price, 1))
combined_data <- combined_data %>% mutate(t_since.lag = lag(t_since, 1))
combined_data <- combined_data %>% mutate(Unwork_NSW.lag = lag(Unwork_NSW, 5))
combined_data <- combined_data %>% mutate(Scrap_Imports_CN.lag = lag(Scrap_Imports_CN, 6))

# Remove missing which caused by lagging
combined_data <- combined_data %>% filter(!is.na(intervention.lag))
combined_data <- combined_data %>% filter(!is.na(Total_theft.lag))
combined_data <- combined_data %>% filter(!is.na(Copper_price.lag))
combined_data <- combined_data %>% filter(!is.na(t_since.lag))
combined_data <- combined_data %>% filter(!is.na(Unwork_NSW.lag))
combined_data <- combined_data %>% filter(!is.na(Scrap_Imports_CN.lag))

# Create log-transformed variables (to address zero-value issues)
combined_data <- combined_data %>%
  mutate(
    log_cases = log(cases + 1), 
    log_Total_theft.lag = log(Total_theft.lag + 1),
    log_Copper_price.lag = log(Copper_price.lag + 1),
    log_t_since.lag = log(t_since.lag +1),
    log_Unwork_NSW.lag = log(Unwork_NSW.lag + 1),
    log_Scrap_Imports_CN.lag = log(Scrap_Imports_CN.lag + 1),
  )

# Split into training and tesing datasets
train_data <- combined_data %>% filter(date >= as.Date("2010-01-01") & date < as.Date("2021-07-01"))
test_data <- combined_data %>% filter(date >= as.Date("2021-07-01") & date < as.Date("2023-06-01"))

train_data <- train_data %>%
  mutate(
    Feb = ifelse(Month == 2, 1, 0),
    Mar = ifelse(Month == 3, 1, 0),
    APr = ifelse(Month == 4, 1, 0),
    May = ifelse(Month == 5, 1, 0),
    Jun = ifelse(Month == 6, 1, 0),
    Jul = ifelse(Month == 7, 1, 0),
    Aug = ifelse(Month == 8, 1, 0),
    Sep = ifelse(Month == 9, 1, 0),
    Oct = ifelse(Month == 10, 1, 0),
    Nov = ifelse(Month == 11, 1, 0),
    Dec = ifelse(Month == 12, 1, 0),
  )



test_data <- test_data %>%
  mutate(
    Feb = ifelse(Month == 2, 1, 0),
    Mar = ifelse(Month == 3, 1, 0),
    APr = ifelse(Month == 4, 1, 0),
    May = ifelse(Month == 5, 1, 0),
    Jun = ifelse(Month == 6, 1, 0),
    Jul = ifelse(Month == 7, 1, 0),
    Aug = ifelse(Month == 8, 1, 0),
    Sep = ifelse(Month == 9, 1, 0),
    Oct = ifelse(Month == 10, 1, 0),
    Nov = ifelse(Month == 11, 1, 0),
    Dec = ifelse(Month == 12, 1, 0)
  )
```

## 4. Methodology

### 4.1 Methodological Framework and Variable Filtering

Figure 1 outlines the methodological framework of this study, detailing the steps of model training, validation, and evaluation.

To enhance the robustness of the predictive model for traffic copper cable theft, the dataset was split into a training set (January 2010 to June 2021) for model development and a testing set (July 2021 to May 2023) for external validation.

The study employs the Granger causality test, using vector autoregression (VAR) and F-statistics to assess the influence of lagged exogenous variables on the dependent variable ([Stern, 2011]{.underline}). Each variable is analyzed with a maximum lag of six months, keeping only the most significant ones (p \< 0.05). The variance inflation factor (VIF) is utilized to detect multicollinearity (VIF \> 10), and redundant variables are removed to improve model reliability.

For variable selection in the ARIMAX and Log-Log + AR(P) models, variables are introduced sequentially based on their causal relationships, with the optimal set chosen using AIC, BIC, and MAPE criteria. In the XGBoost model training, all pre-selected variables are input simultaneously, and SHAP analysis identifies those contributing at least 90% of the cumulative effect to correcting ARIMA residual and eliminating low-contribution variables, enhancing the effectiveness of the modeling across different methods.

![](images/clipboard-1473895390.png)

^**Figure 1 Modeling Framework for Copper Cable Theft**^

### 4.2 Granger Test for Variable Selection

The Granger test results in Figure 2 indicate that at a 1-month lag, legislation, the overall theft rate in New South Wales, global copper prices, and the Australian Consumer Price Index (CPI) exhibit the most significant causal relationships with traffic copper cable theft, gradually weakening over time. In contrast, China's copper scrap imports do not demonstrate a strong and consistent causal relationship with traffic copper cable theft in New South Wales, only showing a relatively significant correlation at a 5-month lag. Additionally, the unemployment rate in New South Wales does not exhibit a significant causal relationship with traffic copper cable theft and is therefore excluded from further analysis.

```{r}
# Set the list of candidate explanatory variables to be tested for Granger causality
variables_Granger <- c("intervention", "Total_theft", "Copper_price", "Unwork_NSW", "Scrap_Imports_CN", "t_since")
# 设置变量和滞后期
variables_Granger <- c("intervention", "Total_theft", "Copper_price", "Unwork_NSW", "Scrap_Imports_CN", "t_since")
lags <- 1:6
# 使用 reformulate 正确构建 formula
get_granger_p <- function(var, lag) {
  formula <- reformulate(var, response = "cases")
  test <- grangertest(formula, order = lag, data = train_data)
  return(test$`Pr(>F)`[2])
}
# 生成所有组合并提取 P 值
granger_results_all <- expand.grid(Variable = variables_Granger, Lag = lags) %>%
  mutate(
    Variable = as.character(Variable),  
    P_Value = map2_dbl(Variable, Lag, get_granger_p)
  )
# 宽格式展示（类似你之前Excel格式）
granger_wide <- granger_results_all %>%
  mutate(Lag = paste0("Lag_", Lag, "_month")) %>%
  pivot_wider(names_from = Lag, values_from = P_Value)
# 输出查看
print(granger_results_all)
print(granger_wide)
# 设置显示变量名称的映射（用于图中更正式的英文名称）
variable_labels <- c(
  intervention = "Legislation",
  Total_theft = "Total_theft (NSW)",
  Copper_price = "Global Copper Price",
  Unwork_NSW = "Unemployment (NSW)",
  Scrap_Imports_CN = "China's Scrap Imports",
  t_since = "Time Since Intervention"
)

# 添加变量名称标签 + 显著性等级（颜色分级）
granger_plot_data <- granger_results_all %>%
  mutate(
    Variable_Label = variable_labels[Variable],
    Lag_Label = paste0("Lag ", Lag),
    Significance = cut(
      P_Value,
      breaks = c(-Inf, 0.01, 0.05, 0.1, Inf),
      labels = c("p < 0.01", "p < 0.05", "p < 0.1", "Not significant")
    )
  )

ggplot(granger_plot_data, aes(x = Lag_Label, y = Variable_Label, fill = Significance)) +
  geom_tile(color = "white") +
  geom_text(aes(label = sprintf("%.2e", P_Value)), size = 3.5, color = "black") +
  scale_fill_manual(
    values = c(
      "p < 0.01" = "#b2182b",
      "p < 0.05" = "#ef8a62",
      "p < 0.1"  = "#fee08b",
      "Not significant" = "#66c2a5"
    )
  ) +
  theme_minimal(base_size = 10) +
  labs(
    title = "Granger Causality Test Results (p-values)",
    x = "Lag", y = "Variable",
    fill = "Significance Level"
  ) +
  theme(
    plot.title = element_text(size = 14, face = "bold", color = "black"),
    axis.title.x = element_text(size = 12, color = "black"),
    axis.title.y = element_text(size = 12, color = "black"),
    axis.text = element_text(size = 10, color = "black"),
    axis.text.x = element_text(angle = 0, hjust = 0.5),
    legend.text = element_text(size = 10, color = "black"),
    legend.title = element_text(size = 10, color = "black"),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white", color = NA),       
    plot.background = element_rect(fill = "white", color = NA)      
  )
```

### 4.3 log_log Model

The log-log regression serves as a benchmark model for comparative analysis in conjunction with the ARIMAX model, as shown in Equation (2):

|     |     |     |     |     |       |     |
|-----|-----|-----|-----|-----|-------|-----|
|     |     |     |     |     |       |     |
|     |     |     |     |     | \(2\) |     |
|     |     |     |     |     |       |     |

Where  represents the number of copper cable theft incidents at the time *t*;  denotes the external influencing factors at time *t*; is a constant term;  is the elasticity coefficient, meaning that when  changes by 1%,   changes by %; and  represents the error term ([Benoit, 2011]{.underline}).

During model fitting on the training dataset, the Durbin-Watson statistic reveals a notable autocorrelation in the log-log model’s residuals, aligning with previous studies ([Sidebottom et al., 2014]{.underline}). Given that residual autocorrelation may diminish the model's predictive capability ([Ludlow & Perez, 2018]{.underline}), this study adopts the methodology that [Sidebottom et al. (2014)]{.underline} proposed, introducing autoregressive terms to resolve the autocorrelation, as shown in Equation (3):

                              (3)

Where *p* is the order of autoregression;  is the copper cable theft incidents in the previous period;  is the autoregressive coefficient. The remaining parameters follow Equation (2).

```{r}
# Log-log linear regression model (Remove Dec)
log_log_model_Final <- lm(log_cases ~ log_Total_theft.lag + log_Copper_price.lag + intervention.lag + log_t_since.lag + Mar + May + Jun + Jul + Aug + Sep + Oct + Nov, data = train_data)

# Model summary
summary(log_log_model_Final)
```

### 4.4 ARIMAX Model

The Auto Regressive Integrated Moving Average with Exogenous Variables[\[ZZ1\]](#_msocom_1)  (ARIMAX) model is an extension of the ARIMA model ([Othman, 2017]{.underline}). ARIMA consists of three components: the autoregressive (AR) term, which captures dependencies between the current observation and past values through order *p*; the integrated (I) term, which applies to the difference of order *d* to eliminate trends; and the moving average (MA) term, which smooths random fluctuations by weighting past error terms through order *q* ([Joos Korstanje, 2021]{.underline}). The ARIMAX model further incorporates exogenous variables , enabling quantitative assessment of external driving factors influencing copper cable theft incidents ([Othman, 2017]{.underline}). The mathematical formulation is given as:

|     |     |     |     |     |       |     |
|-----|-----|-----|-----|-----|-------|-----|
|     |     |     |     |     |       |     |
|     |     |     |     |     | \(1\) |     |
|     |     |     |     |     |       |     |

where  represents the predicted number of copper cable theft incidents,  and  are the autoregressive and moving average polynomials.  is the differencing operator,  is the stochastic disturbance term of the time series,  is the exogenous variables,  is the respective coefficients, and  is the white noise error term ([Hyndman & Khandakar, 2008]{.underline}).

The ARIMAX model parameters (*p, d, q*) are optimized using the auto.arima function in the R environment based on the training dataset ([Hyndman & Khandakar, 2008]{.underline}). Since high-order parameters can lead to increased computational complexity, unstable parameter estimation, and overfitting ([Hyndman & Athanasopoulos, 2018]{.underline}), this study imposes complexity constraints within the auto.arima function (max.*p*=5, max.*q*=5, max.*d*=2) to balance computational efficiency and predictive accuracy, ensuring model robustness. Based on this framework, auto.arima employs the Hyndman-Khandakar algorithm, integrating unit root tests (ADF, KPSS, Canova-Hansen) to determine the optimal differencing order *d*, and ensure stationarity. A stepwise search strategy with the Akaike Information Criterion (AIC) is then applied to identify the optimal combination of *p* and *q*.

 [\[ZZ1\]](#_msoanchor_1)The full name is only needed when the acronym is used first-time. Afterwards, you should stick to the acronym. Please correct it throughout the paper.

```{r}
# Construct external varibale matrix
Xreg_matrix_Final <- model.matrix(~ Total_theft.lag + Copper_price.lag + intervention.lag + May + Jun + Sep, data = train_data)

# Train the SARIMAX model
arimax_model_Final <- auto.arima(train_data$cases, xreg = Xreg_matrix_Final, max.p = 5, max.d = 2, max.q = 5, 
                             seasonal = TRUE, stepwise = FALSE, approximation = FALSE)
# Model summary
summary(arimax_model_Final)

# Coefficient test
coeftest(arimax_model_Final)
```

### 4.5 XG Boost Model

In the ARIMA+XGBoost model, the ARIMA component first captures the temporal trends in traffic copper cable theft incidents and generates forecasts. XGBoost then utilizes exogenous variables to model the residuals of the ARIMA component nonlinearly, thereby enhancing predictive accuracy and capturing complex dependencies within the data.

XGBoost, an extreme gradient boosting algorithm, consists of multiple decision trees and utilizes gradient descent to minimize the loss function. Each new decision tree optimally fits the residuals from the previous iteration, thereby refining the structure of the decision trees. Additionally, XGBoost incorporates regularization techniques to suppress overfitting and enhance generalization capability ([Chen & Guestrin, 2016]{.underline}). The core objective of XGBoost is to minimize the following equation (6):

|     |     |     |     |     |       |     |
|-----|-----|-----|-----|-----|-------|-----|
|     |     |     |     |     |       |     |
|     |     |     |     |     | \(4\) |     |
|     |     |     |     |     |       |     |

Where  denotes the objective function. The index *i* represents the sample identifier, where , and *n* is the total number of samples in the dataset. The parameter *t* corresponds to the iteration step, indicating the stage of the decision tree within the gradient boosting framework. The variable  denotes the observed value of the *i*-th sample, whereas  represents its predicted counterpart from the previous iteration. The function  defines the newly generated decision tree at iteration *t* , responsible for refining the prediction of sample  and incrementally improving model accuracy ([Chen & Guestrin, 2016]{.underline}).  (5)

The loss function  quantifies the discrepancy between predictions and observed values, facilitating model optimization. The regularization term  imposes constraints on model complexity to mitigate overfitting, with its mathematical formulation expressed as follows:

Where  represents the number of leaf nodes in the decision tree,  denotes the weights assigned to each leaf node,  and  are regularization parameters ([Chen & Guestrin, 2016]{.underline}).

```{r}
# 1. 构建训练集与测试集的特征矩阵(with log)
X_train <- model.matrix(~ log_Total_theft.lag + log_Copper_price.lag + log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag + intervention.lag + log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec,
                        data = train_data)

X_test <- model.matrix(~ log_Total_theft.lag + log_Copper_price.lag + log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag + intervention.lag + log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec,
                       data = test_data)

# 2. 创建 DMatrix 对象
dtrain <- xgb.DMatrix(data = X_train, label = train_data$log_cases)
dtest <- xgb.DMatrix(data = X_test)

# 3. 定义超参数网格
grid <- expand.grid(
  max_depth = c(3, 5, 7),
  eta = c(0.01, 0.05, 0.1),
  subsample = c(0.6, 0.8),
  colsample_bytree = c(0.6, 0.8)
)

# 4. 网格搜索 + 交叉验证（使用 test_rmse 作为指标）
best_rmse <- Inf
best_param <- list()
best_nrounds <- 0

for (i in 1:nrow(grid)) {
  param <- list(
    objective = "reg:squarederror",
    eval_metric = "rmse",
    max_depth = grid$max_depth[i],
    eta = grid$eta[i],
    subsample = grid$subsample[i],
    colsample_bytree = grid$colsample_bytree[i]
  )
  
  set.seed(123)
  cv_result <- xgb.cv(
    params = param,
    data = dtrain,
    nrounds = 300,
    nfold = 5,
    early_stopping_rounds = 10,
    verbose = 0
  )
  
  if (cv_result$evaluation_log$test_rmse_mean[cv_result$best_iteration] < best_rmse) {
    best_rmse <- cv_result$evaluation_log$test_rmse_mean[cv_result$best_iteration]
    best_param <- param
    best_nrounds <- cv_result$best_iteration
  }
}

# 5. 输出最佳参数与轮次
print("Best parameters:")
print(best_param)
print(paste("Best nrounds:", best_nrounds))

# 6. 使用最佳参数训练最终模型
xgb_final <- xgb.train(
  params = best_param,
  data = dtrain,
  nrounds = best_nrounds,
  verbose = 1
)

# 7. 在测试集上预测
xgb_pred <- predict(xgb_final, dtest)

# 8. 可选：评估 RMSE
rmse <- sqrt(mean((xgb_pred - test_data$log_cases)^2))
print(paste("Test RMSE:", round(rmse, 2)))
```

### 4.5 Model Validation and Performance Comparison

This study evaluates the ARIMAX and log-log + AR(P) models using several statistical tests. The Box-Ljung test assesses serial correlation, the Durbin-Watson statistic detects autocorrelation, and the Shapiro-Wilk test evaluates residual normality. The Breusch-Pagan test examines heteroscedasticity, while the variance inflation factor (VIF) checks for multicollinearity among explanatory variables.

For the ARIMA + XGBoost model, the Box-Ljung test is used to detect serial correlation in the residuals, and the ACF and PACF analyze the residual lag structure to ensure XGBoost can capture nonlinear relationships among exogenous variables. RMSE serves as the optimization objective, with hyperparameters such as maximum tree depth and learning rate fine-tuned to improve predictive accuracy.

The core evaluation metrics include mean error (ME), root mean square error (RMSE), mean absolute error (MAE), mean percentage error (MPE), and mean absolute percentage error (MAPE), allowing for a systematic comparison of model performance regarding predictive accuracy, stability, and adaptability.

All analyses were conducted in R 4.2.2, utilizing packages suited to the modeling requirements. More specifically, the ARIMAX model is developed using *forecast* and *FinTS*. The ARIMA + XGBoost model using *xgboost* and *Matrix* for gradient boosting decision trees and *shapviz* for variable importance analysis.

## 5. Results

### 5.1 Optimal Predictive Model Selection

This section compares the statistical validity and predictive performance of the Log-Log + AR(P), SARIMAX, and SARIMA + XGBoost models to determine the optimal model for the time-series analysis of traffic copper cable theft incidents.

According to the test results (Table 1), the Log-Log model exhibits severe autocorrelation issues. This issue continued to persist in the Log-Log + AR (2) model, as indicate by the Durbin-Watson test (P \< ) and the Box-Ljung test. The PACF (Figure 3a) indicates that the residuals of the Log-Log + AR (2) model exhibit significant autocorrelation at lags 1 and 2.  The ACF (Figure 3b) shows that the autocorrelation structure remains unresolved over longer lags. These findings suggest that the Log-Log + AR(P) model cannot capture the dynamic characteristics of time-series data, reducing its predictive reliability.

In contrast, the ARIMAX approach utilizes the auto.arima function to select ARIMAX(1,0,1) for modeling. The Shapiro-Wilk test (P = 0.4827) confirms that the residuals approximate a normal distribution. Additionally, the Box-Ljung test (P = 0.5332) detects no significant residual autocorrelation, and the relatively low variance inflation factor (VIF = 1.9122) indicates minimal collinearity among explanatory variables, enhancing model stability and interpretability. These statistical results demonstrate that ARIMAX(1,0,1) exhibits high modeling quality, effectively capturing the dynamic characteristics of time-series data while maintaining appropriate statistical assumptions, making it a reliable tool for the time-series analysis of traffic copper cable theft incidents.

In the ARIMA + XGBoost model fitting, the auto. arima function selects ARIMA (0,0,1) as the base component. XGBoost uses a regression loss function with RMSE as the optimization goal, employing a maximum depth of 5, a learning rate of 0.1, and subsampling and column sampling rates of 0.8 over 100 training iterations. This model incorporates external factors to capture nonlinear residuals from ARIMA.

The Box-Ljung test (P = 0.5332) shows no significant residual autocorrelation, while the ACF indicates that all lagged autocorrelation coefficients are within the 95% confidence interval, and the PACF exhibits no significant peaks, confirming white noise. Additionally, the ADF test (P \< 0.01) confirms the stationarity of the residuals, supporting the role of the ARIMA(0,0,1) component in stabilizing the data. Overall, this model effectively captures time-series features and nonlinear relationships, enhancing predictive performance and generalization.

From the visualization of model predictions on the test set (Figure 4), ARIMAX (1,0,1) and Log-Log + AR(2) both underestimated the number of traffic copper cable theft incidents in Q1 2023 by approximately 20 cases. In contrast, ARIMA (0,0,1) + XGBoost exhibited smaller errors during this period, indicating that its nonlinear feature extraction capability compensates for the limitations of traditional linear models. However, considering overall performance across the test set, ARIMAX (1,0,1) demonstrated superior stability and closer alignment with observed values, indicating its stronger robustness and generalization ability.

Based on key error metrics (Table 2), ARIMAX (1,0,1) achieved lower prediction errors, higher stability, and better adaptability to dynamic data. Log-Log + AR(2) and ARIMA (0,0,1) + XGBoost exhibited moderate predictive performance, but the latter showed greater residual fluctuations, with RMSE, MAE, MPE, and MAPE all slightly higher than those of ARIMAX (1,0,1), indicating a larger overall error magnitude.

Overall, ARIMAX (1,0,1) exhibited the highest statistical robustness, superior generalization ability, and the best prediction error control, ensuring high model reliability. ARIMA (0,0,1) + XGBoost outperformed Log-Log + AR(2) in multiple error metrics, fully satisfying the fundamental model assumptions and effectively capturing the nonlinear relationships between external influencing factors and traffic copper cable theft. In contrast, Log-Log + AR(2) exhibited significant autocorrelation issues and consistently higher errors across all metrics. Therefore, considering model robustness, predictive accuracy, and statistical assumption verification, ARIMAX (1,0,1) is the optimal model, followed by ARIMA (0,0,1) + XGBoost, with Log-Log + AR(2) demonstrating the weakest predictive performance.

```{r}
#########################
###log_log model的检验###
#########################
# Extract residuals
residuals_log_log_model_Final <- residuals(log_log_model_Final)

# Plot residual histogram
hist(residuals_log_log_model_Final, breaks = 30, main = "Residuals Histogram", xlab = "Residuals", col = "blue")

# Generate Q–Q plot
qqnorm(residuals_log_log_model_Final)
qqline(residuals_log_log_model_Final, col = "red")

# Perform Shapiro–Wilk normality test 
shapiro.test(residuals_log_log_model_Final)

# Plot residuals vs. fitted values
plot(fitted(log_log_model_Final), residuals_log_log_model_Final, main = "Residuals vs. Fitted",
     xlab = "Fitted values", ylab = "Residuals", pch = 20, col = "blue")
abline(h = 0, col = "red", lwd = 2)

# Breusch–Pagan test for heteroscedasticity
bptest(log_log_model_Final)

# Autocorrelation tests
# Durbin–Watson test
dwtest(log_log_model_Final)

# Ljung–Box test
Box.test(residuals_log_log_model_Final, lag = 30, type = "Ljung-Box")

# Multicollinearity diagnostics
# Calculate VIF
vif(log_log_model_Final)
```

```{r}
########################
###ARIMAX model的检验###
########################
# 获取 ARIMAX 模型残差
residuals_arimax <- residuals(arimax_model_Final)

# Conduct Ljung–Box test to examine residual independence  
Box.test(residuals_arimax, lag = 30, type = "Ljung-Box")

# Perform Shapiro–Wilk test to assess normality of residuals  
shapiro_test_result <- shapiro.test(residuals_arimax)
print(shapiro_test_result)

# Use ARCH LM test to detect heteroscedasticity in residuals  
ArchTest(residuals_arimax, lags = 10)

library(tseries)
# Extract residuals from the SARIMAX model  
residuals_arimax <- residuals(arimax_model_Final)

# Perform Augmented Dickey–Fuller (ADF) test to evaluate residual stationarity  
adf.test(residuals_arimax)

# === 1. 构建线性回归模型以计算 VIF ===
vif_model <- lm(cases ~ Total_theft.lag + Copper_price.lag + intervention.lag + May + Jun + Sep, data = train_data)

# === 2. 提取各变量的 VIF 值 ===
vif_values <- vif(vif_model)
print("Variance Inflation Factor (VIF) values:")
print(vif_values)
```

```{r}
##################################
###XG Boost model的基本假设检验###
##################################
# 将 XGBoost 的 log_cases 预测结果进行反变换为 cases
final_predictions_xgb <- exp(xgb_pred) - 1  # 注意此处反变换

# 1. 计算残差（使用原始尺度）
final_residuals_xgb <- test_data$cases - final_predictions_xgb

# 3. Ljung-Box 检验自相关性
box_ljung_test_xgb <- Box.test(final_residuals_xgb, lag = 20, type = "Ljung-Box")
print(box_ljung_test_xgb)

# === 正态性检验 ===
shapiro_test_xgb <- shapiro.test(final_residuals_xgb)
print(shapiro_test_xgb)

# === QQ图可视化 ===
qqnorm(final_residuals_xgb)
qqline(final_residuals_xgb, col = "red", lwd = 2)

# 加载必要包
if (!require(lmtest)) install.packages("lmtest")
library(lmtest)

# 用简单线性模型构造残差与预测值的关系，用于 BP 检验
bp_model <- lm(final_residuals_xgb^2 ~ final_predictions_xgb)
bptest_result <- bptest(bp_model)

print(bptest_result)
```

```{r}
###############################
###log_log模型的误差指标计算###
###############################
# Generate predicted values for the test dataset using the "log_log model_13"
predicted_values <- predict(log_log_model_Final, newdata = test_data)

# Back-transform both predicted and actual values from logarithmic scale to original scale
predicted_cases <- exp(predicted_values) - 1
test_data$actual_cases <- exp(test_data$log_cases) - 1

# Construct a data frame to store prediction results and observed values
prediction_results <- data.frame(
  date = test_data$date,
  actual_cases = test_data$actual_cases,
  predicted_cases = predicted_cases
)

# Calculate residuals (prediction errors) as the difference between predicted and actual values
errors <- prediction_results$predicted_cases - prediction_results$actual_cases

# Compute Mean Error (ME)
ME <- mean(errors)

# Compute Root Mean Squared Error (RMSE)
RMSE <- sqrt(mean(errors^2))

# Compute Mean Absolute Error (MAE)
MAE <- mean(abs(errors))

# Compute Mean Percentage Error (MPE)
MPE <- mean((errors / prediction_results$actual_cases) * 100)

# Compute Mean Absolute Percentage Error (MAPE)
MAPE <- mean(abs(errors / prediction_results$actual_cases) * 100)

# Compute Mean Absolute Scaled Error (MASE) using previous actual values as the naive benchmark
naive_forecast <- c(NA, head(prediction_results$actual_cases, -1))
naive_errors <- naive_forecast - prediction_results$actual_cases
MASE <- mean(abs(errors)) / mean(abs(naive_errors), na.rm = TRUE)

# 计算总平方和（SST）和残差平方和（SSE）
SSE <- sum((prediction_results$actual_cases - prediction_results$predicted_cases)^2)
SST <- sum((prediction_results$actual_cases - mean(prediction_results$actual_cases))^2)

# 计算 R-squared
R_squared <- 1 - SSE / SST

# Output all error metrics to the console
cat("Mean Error (ME):", ME, "\n")
cat("Root Mean Squared Error (RMSE):", RMSE, "\n")
cat("Mean Absolute Error (MAE):", MAE, "\n")
cat("Mean Percentage Error (MPE):", MPE, "%\n")
cat("Mean Absolute Percentage Error (MAPE):", MAPE, "%\n")
cat("Mean Absolute Scaled Error (MASE):", MASE, "\n")
cat("R-squared:", round(R_squared, 4), "\n")


ME_log <- ME
RMSE_log <- RMSE
MAE_log <- MAE
MPE_log <- MPE
MAPE_log <- MAPE
MASE_log <- MASE
R_squared_log     <- R_squared
```

```{r}
##########################
###ARIMAX model误差计算###
##########################
library(dplyr)

forecast_xreg_Final <- model.matrix(~ Total_theft.lag + Copper_price.lag + intervention.lag + May + Jun + Sep, data = test_data)
forecast_result_Final <- forecast(arimax_model_Final, xreg = forecast_xreg_Final)

# 添加预测值和实际值列（不做 log 还原）
test_data$predicted_cases <- forecast_result_Final$mean
test_data$actual_cases <- test_data$cases

# 计算误差项与指标
comparison_data <- test_data %>%
  mutate(
    Error = actual_cases - predicted_cases,
    Abs_Error = abs(Error),
    Squared_Error = Error^2,
    Pct_Error = ifelse(actual_cases == 0, NA, (Error / actual_cases) * 100),
    Abs_Pct_Error = abs(Pct_Error)
  )

# 基本误差指标
ME    <- mean(comparison_data$Error, na.rm = TRUE)
RMSE  <- sqrt(mean(comparison_data$Squared_Error, na.rm = TRUE))
MAE   <- mean(comparison_data$Abs_Error, na.rm = TRUE)
MPE   <- mean(comparison_data$Pct_Error, na.rm = TRUE)
MAPE  <- mean(comparison_data$Abs_Pct_Error, na.rm = TRUE)

# 构造 Naive Benchmark（用于计算 MASE）
comparison_data <- comparison_data %>%
  mutate(
    Naive = lag(actual_cases, 1),
    Naive_Error = actual_cases - Naive,
    Abs_Naive_Error = abs(Naive_Error)
  )
Naive_MAE <- mean(comparison_data$Abs_Naive_Error, na.rm = TRUE)
MASE <- MAE / Naive_MAE


# === 计算 R²（Coefficient of Determination）===
# y_true: actual_cases, y_pred: predicted_cases
SSE <- sum((comparison_data$actual_cases - comparison_data$predicted_cases)^2, na.rm = TRUE)
SST <- sum((comparison_data$actual_cases - mean(comparison_data$actual_cases, na.rm = TRUE))^2, na.rm = TRUE)
R_squared <- 1 - (SSE / SST)

# 输出 R² 结果
cat("R-squared (Coefficient of Determination):", round(R_squared, 4), "\n")


# 输出误差指标
cat("ARIMAX Forecast Error Metrics (Original Scale, Test Set):\n")
cat("---------------------------------------------------------\n")
cat("Mean Error (ME):",    round(ME, 4), "\n")
cat("Root Mean Squared Error (RMSE):", round(RMSE, 4), "\n")
cat("Mean Absolute Error (MAE):",      round(MAE, 4), "\n")
cat("Mean Percentage Error (MPE):",    round(MPE, 4), "%\n")
cat("Mean Absolute Percentage Error (MAPE):", round(MAPE, 4), "%\n")
cat("Mean Absolute Scaled Error (MASE):", round(MASE, 4), "\n")
cat("R-squared (Coefficient of Determination):", round(R_squared, 4), "\n")

ME_arimax <- ME
RMSE_arimax <- RMSE
MAE_arimax <- MAE
MPE_arimax <- MPE
MAPE_arimax <- MAPE
MASE_arimax <- MASE
R_squared_arimax  <- R_squared
```

```{r}
########################
##XG_Boost模型误差指标##
########################
# 创建评估数据框
export_data_xgb <- data.frame(
  date = test_data$date,
  actual_cases = test_data$cases,
  predicted_cases = final_predictions_xgb
)

# 误差残差
residuals_xgb <- test_data$cases - final_predictions_xgb

# 1. MAPE（Mean Absolute Percentage Error）
mape_xgb <- mean(abs(residuals_xgb / test_data$cases)) * 100

# 2. RMSE（Root Mean Squared Error）
rmse_xgb <- sqrt(mean(residuals_xgb^2))

# 3. MAE（Mean Absolute Error）
mae_xgb <- mean(abs(residuals_xgb))

# 4. MPE（Mean Percentage Error）
mpe_xgb <- mean(residuals_xgb / test_data$cases) * 100

# 5. ME（Mean Error，偏差）
me_xgb <- mean(residuals_xgb)

# 6. MASE（Mean Absolute Scaled Error）
# Naive 方法误差分母：训练集中相邻值差的平均
naive_errors <- abs(diff(train_data$cases))
mase_denominator <- mean(naive_errors, na.rm = TRUE)
mase_xgb <- mae_xgb / mase_denominator

# 7. R-squared
sst_xgb <- sum((test_data$cases - mean(test_data$cases))^2)
sse_xgb <- sum(residuals_xgb^2)
R_squared_xgb <- 1 - sse_xgb / sst_xgb

# 输出所有指标
cat("Performance Metrics of XGBoost Model on Test Set:\n")
cat("--------------------------------------------------\n")
cat("MAPE:       ", round(mape_xgb, 2), "%\n")
cat("RMSE:       ", round(rmse_xgb, 2), "\n")
cat("MAE:        ", round(mae_xgb, 2), "\n")
cat("MPE:        ", round(mpe_xgb, 2), "%\n")
cat("ME:         ", round(me_xgb, 2), "\n")
cat("MASE:       ", round(mase_xgb, 4), "\n")
cat("R-squared:  ", round(R_squared_xgb, 4), "\n")
```

```{r}
library(gt)

model_comparison <- data.frame(
  Model = c(
    "log-log model",
    "ARIMAX(1,0,1) model",
    "XGBoost model"
  ),
  ME    = c(ME_log, ME_arimax, me_xgb),
  RMSE  = c(RMSE_log, RMSE_arimax, rmse_xgb),
  MAE   = c(MAE_log, MAE_arimax, mae_xgb),
  MPE   = c(MPE_log, MPE_arimax, mpe_xgb),
  MAPE  = c(MAPE_log, MAPE_arimax, mape_xgb),
  MASE  = c(MASE_log, MASE_arimax, mase_xgb),
  R_squared = c(R_squared_log, R_squared_arimax, R_squared_xgb)
)

model_comparison %>%
  mutate(across(where(is.numeric), ~ round(., 3))) %>%
  gt() %>%
  tab_header(title = md("**Forecast Error Metrics Comparison Across Models**")) %>%
  cols_label(
    Model = "Model",
    ME = "ME",
    RMSE = "RMSE",
    MAE = "MAE",
    MPE = "MPE",
    MAPE = "MAPE",
    MASE = "MASE",
    R_squared = "R_squared"  
  ) %>%
  tab_source_note(
    md("Note: ME (Mean Error), RMSE (Root Mean Squared Error), MAE (Mean Absolute Error), MPE (Mean Percentage Error), MAPE (Mean Absolute Percentage Error), MASE (Mean Absolute Scaled Error), R_squared (Coefficient of Determination).")
  ) %>%
  cols_align(align = "center", columns = everything()) %>%
  cols_width(
    Model ~ px(260),
    everything() ~ px(80)
  )
```

```{r}
#########################
###log_log模型的预测图###
#########################
# 2. 预测与反变换
test_data$predicted_log_cases <- predict(log_log_model_Final, newdata = test_data)
test_data$predicted_cases <- exp(test_data$predicted_log_cases) - 1
test_data$actual_cases <- test_data$cases  

# 3. 绘图（季度X轴 + 高对比色 + 实线 + 调整Y轴范围）
ggplot(test_data, aes(x = date)) +
  geom_step(aes(y = actual_cases, color = "Actual Cases"), size = 1.2) +
  geom_step(aes(y = predicted_cases, color = "Predicted Cases"), size = 1.2) +
  scale_color_manual(
    values = c("Actual Cases" = "black",
               "Predicted Cases" = "#00BA38")
  ) +
  scale_x_date(
    date_breaks = "3 months",
    labels = function(x) {
      paste0(format(x, "%Y"), "-Q", lubridate::quarter(x))
    }
  ) +
  scale_y_continuous(
    limits = c(0, 100),
    breaks = seq(0, 100, by = 20)
  ) +
  labs(
    title = "Comparison of Predicted vs. Actual Cases by Quarter",
    x = "Quarter",
    y = "Number of Theft Cases",
    color = "Legend"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),     # 标题
    axis.title = element_text(size = 12),                    # 坐标轴标题
    axis.text = element_text(size = 10),                     # 坐标轴刻度
    legend.title = element_text(size = 10),                  # 图例标题
    legend.text = element_text(size = 10)                    # 图例项
  )
```

```{r}
########################
###ARIMAX model预测图###
########################
library(ggplot2)
library(lubridate)
library(dplyr)

forecast_xreg_Final <- model.matrix(~ Total_theft.lag + Copper_price.lag + intervention.lag + May + Jun + Sep, data = test_data)
forecast_result_Final <- forecast(arimax_model_Final, xreg = forecast_xreg_Final)

# 添加预测值和实际值列（不做 log 还原）
test_data$predicted_cases <- forecast_result_Final$mean
test_data$actual_cases <- test_data$cases

# 绘图（对比预测与实际）
library(ggplot2)
library(lubridate)

ggplot(test_data, aes(x = date)) +
  geom_step(aes(y = actual_cases, color = "Actual Cases"), size = 1.2) +
  geom_step(aes(y = predicted_cases, color = "Predicted Cases"), size = 1.2) +
  scale_color_manual(
    values = c("Actual Cases" = "#1f77b4",             
               "Predicted Cases" = "black")           
  ) +
  scale_x_date(
    date_breaks = "3 months",
    labels = function(x) paste0(format(x, "%Y"), "-Q", lubridate::quarter(x))
  ) +
  scale_y_continuous(
    limits = c(0, 100),
    breaks = seq(0, 100, by = 20)
  ) +
  labs(
    title = "Comparison of Predicted vs. Actual Cases by Quarter",
    x = "Quarter",
    y = "Number of Theft Cases",
    color = "Legend"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),    
    axis.title = element_text(size = 12),                   
    axis.text = element_text(size = 10),                    
    legend.title = element_text(size = 10),                 
    legend.text = element_text(size = 10)                   
  )
```

```{r}
############################
###XG Boost model的预测图###
############################
library(ggplot2)
library(lubridate)
library(dplyr)

# 构建绘图数据
plot_data_xgb <- test_data %>%
  mutate(
    predicted_cases = final_predictions_xgb,
    actual_cases = cases
  )

# 绘图（已修复背景问题）
xgb_plot <- ggplot(plot_data_xgb, aes(x = date)) +
  geom_step(aes(y = actual_cases, color = "Actual Cases"), size = 1.2) +
  geom_step(aes(y = predicted_cases, color = "Predicted Cases"), size = 1.2) +
  scale_color_manual(
    values = c("Actual Cases" = "black",
               "Predicted Cases" = "#D62728")
  ) +
  scale_x_date(
    date_breaks = "3 months",
    labels = function(x) paste0(format(x, "%Y"), "-Q", quarter(x))
  ) +
  scale_y_continuous(
    limits = c(0, 100),
    breaks = seq(0, 100, by = 20)
  ) +
  labs(
    title = "Comparison of XGBoost-Predicted vs. Actual Cases by Quarter",
    x = "Quarter",
    y = "Number of Theft Cases",
    color = "Legend"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 10),
    
    
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA)
  )

# 展示图像
print(xgb_plot)
```

### 5.2 Identification of Key Influencing Factors

This study relies on the ARIMAX (1,0,1) model for its superior statistical robustness and interpretability (see Table 3) to analyze traffic copper cable theft drivers. Findings indicate that within the first month of new legislation, average theft incidents decreased by 23.52 cases. A 1% increase in the regional theft rate leads to an increase of 0.63 incidents, requiring a 37.47% rise in the overall theft rate to counteract the legislation's deterrent effect. Similarly, a 1% rise in copper prices (lagged by one month) correlates with a 0.43 increase in theft incidents, necessitating a 54.14% increase in copper prices to offset the legislation's impact. Additionally, theft rates peak in May, June, and September compared to January, indicating a seasonal pattern.

Log-Log + AR(2) and ARIMA(0,0,1) + XGBoost models also revealed significant influences from regional theft rates and copper prices and confirmed seasonal peaks in theft incidents (see Table x and Table xx in Appendix). However, these models yield smaller estimates for the intervention variable than ARIMAX. The differences in estimates may stem from how each model manages temporal dependencies. The Log-Log + AR(2) model shows residual autocorrelation, potentially diluting the intervention variable's impact. In the ARIMA(0,0,1) + XGBoost model, the ARIMA(0,0,1) component effectively captures linear time series trends and may smooth out the structural effects of different variables. Meanwhile, XGBoost primarily relies on long-term trend variables for nonlinear residual modeling, limiting its ability to respond to short-term shock variables (legislation), possibly leading to underestimating policy effects.

Despite differences in variable selection and coefficient estimates across models, key variables—copper prices, regional theft rates, and seasonal patterns—are consistent across models. Therefore, this study uses ARIMAX (1,0,1) results to evaluate policy effects.

```{r}
# Model summary
summary(arimax_model_Final)

# Coefficient test
coeftest(arimax_model_Final)

library(gt)
library(broom)
library(dplyr)

# 生成 tidy 格式的系数表格
coef_df <- tidy(coeftest(arimax_model_Final))

# 重命名列
colnames(coef_df) <- c("Coefficients", "Estimate", "Std_Error", "Z_value", "P_value")

# 使用 case_when 替换变量名
coef_df <- coef_df %>%
  mutate(Coefficients = case_when(
    Coefficients == "ar1" ~ "Autoregressive term",
    Coefficients == "ma1" ~ "Moving average term",
    Coefficients == "(Intercept)" ~ "Intercept",
    Coefficients == "intervention.lag" ~ "Intervention (Lag 1)",
    Coefficients == "Theft_rate.lag" ~ "Total theft rate (Lag 1)",
    Coefficients == "Copper_price.lag" ~ "Copper price (Lag 1)",
    Coefficients == "May" ~ "May",
    Coefficients == "Jun" ~ "June",
    Coefficients == "Sep" ~ "September",
    TRUE ~ Coefficients
  ))

# 添加显著性星号
coef_df <- coef_df %>%
  mutate(Significance = case_when(
    P_value < 0.001 ~ "***",
    P_value < 0.01 ~ "**",
    P_value < 0.05 ~ "*",
    P_value < 0.1 ~ ".",
    TRUE ~ ""
  ))

# 美化格式
coef_df <- coef_df %>%
  mutate(
    Estimate = round(Estimate, 4),
    Std_Error = round(Std_Error, 4),
    P_value = formatC(P_value, format = "e", digits = 2)
  )

# 创建 gt 表格
coef_table <- coef_df %>%
  select(Coefficients, Estimate, Std_Error, P_value, Significance) %>%
  gt() %>%
  tab_header(title = md("**ARIMAX (1,0,1)model coefficients for traffic copper cable theft analysis**")) %>%
  cols_label(
    Coefficients = "Coefficients",
    Estimate = "Estimate",
    Std_Error = "Std Error",
    P_value = "P-value",
    Significance = ""
  ) %>%
  cols_width(
    Coefficients ~ px(200),
    Estimate ~ px(100),
    Std_Error ~ px(100),
    P_value ~ px(120),
    Significance ~ px(60)
  ) %>%
  cols_align(align = "center", columns = c(Estimate, Std_Error, P_value, Significance)) %>%
  tab_source_note(
    md("Note: Coefficients are presented with their standard errors and P-values. Significance levels: *** P < 0.001, ** P < 0.01, * P < 0.05, . P < 0.1")
  ) 
  # 使用等宽字体提升对齐感

# 预览
coef_table

# 保存高质量图像
gtsave(coef_table, filename = "coefficient_table_aligned.png")
```

## 6. Discussion

### 6.1 Key Factors and Patterns in Traffic Copper Cable Theft

Based on the results of variable selection and model optimization, all models reveal a significant positive correlation between fluctuations in copper prices and the incidence of traffic copper cable thefts. This finding aligns with the economic incentive effect frequently observed in metal theft crimes ([Sidebottom et al., 2014, 2011]{.underline}). This behavior aligns with the Rational Choice Theory, which suggests that offenders evaluate potential rewards against the risks of legal repercussions when making decisions. As the value of the target increases, the expected returns also rise, prompting offenders to be more likely to overlook legal sanctions. This dynamic ultimately contributes to higher crime rates ([Wikström & Kroneberg, 2021]{.underline}).   

The overall theft rate in New South Wales demonstrates a significant positive correlation with traffic copper cable theft, suggesting that this type of theft is influenced more by criminal activity than by fluctuations in copper prices. This connection can be elucidated through Routine Activity Theory and Crime Contagion Theory. Crime tends to cluster in space and time, meaning that a high theft rate in a particular area enhances opportunities for further criminal acts. Factors such as lax regulatory enforcement, a concentration of accessible targets, and established criminal networks contribute to the prevalence of copper cable theft ([Leukfeldt & Yar, 2016]{.underline}). Furthermore, the crime contagion effect indicates that when a specific crime occurs frequently in an area, it can lead to an increase in other types of crime within that same context ([Farrell, 2015]{.underline}). Given the high market value and accessibility of copper cables in transportation infrastructure, these cables are likely to be repeated targets for theft ([Whiteacre, Terheide, & Biggs, 2015]{.underline}). Therefore, traffic copper cable theft is closely tied to the overall crime levels present in the region.

This study emphasizes the significance of the Policy Intervention (Binary) variable. Findings from various models indicate that legislation exerts a short-term deterrent effect on traffic copper cable theft, which is consistent with existing research on metal theft ([Modipa, 2022; Sidebottom et al., 2014]{.underline}). In contrast, the Policy Intervention (Cumulative) variable’s effectiveness is constrained. Several factors may contribute to this limitation, including the anonymity of the scrap metal market, the similarity of metals, and existing legal loopholes ([Bennett, 2008]{.underline}). The strong link between the black market and the legal market, coupled with the adaptability of organized crime networks, further restricts the long-term deterrent capabilities of such legislation. Even with regulatory measures in place, stolen copper cables may still infiltrate the recycling system via illegal channels, thus undermining the long-term effectiveness of these regulations ([Morgan, Hoare, & Byron, 2015]{.underline}). Furthermore, organized crime groups may modify their operational strategies and refine the division of labor to mitigate the deterrent effects of law enforcement, resulting in a gradual decline in the actual impact of legislation over time ([van Elteren et al., 2024]{.underline}).

In contrast, the unemployment rate in New South Wales was not identified as a significant factor influencing traffic copper cable theft. This finding is consistent with [Coccia, Cohn, and Kakar (2024)]{.underline}, who argue that individuals facing economic hardship tend to rely on social support systems rather than resorting to metal theft for financial compensation. Furthermore, traffic copper cable theft exhibits characteristics of organized crime ([Mmakwena, 2022]{.underline}). This crime form is more dependent on market demand and the operational capacity of criminal organizations rather than fluctuations in the labor market ([Fell, James, Dienes, Shah, & Grimshaw, 2019]{.underline}). As a result, unemployment cannot be considered a significant driving factor for traffic copper cable theft.

### 6.2 Data Gaps and Methodological Constraints

Traffic copper cable theft is not explicitly categorized as a crime in some regions, leading to inadequate legal provisions and data records ([Queensland Department of Transport and Resources, 2023]{.underline}). [\[ZZ1\]](#_msocom_1) This limitation hampers the model’s ability to describe trends accurately. The predictive results (see Table 2) show that none of the models effectively captured theft trends from Q3 2021 to Q3 2022. While long-term factors are considered, short-term shocks, like law enforcement fluctuations or social events, were omitted, potentially causing temporary surges in theft rates and systemic errors. Additionally, data recording methods further impact model accuracy, as theft data are logged when a case is discovered rather than when it occurs, leading to temporal misalignment. Delays in restoring stolen infrastructure can also distort theft rate variations, making it challenging to establish causal relationships.

This study uses monthly data for forecasting, which may not effectively capture the dynamic relationships among key variables. For instance, while copper prices are recorded monthly, intra-month fluctuations are excluded, potentially omitting important features and reducing model accuracy. Utilizing higher-frequency data, such as daily or weekly records, could improve the identification of short-term events and allow for better predictive capabilities.

Moreover, traffic copper cable theft incidents peak in May and September, indicating potential influences from specific environmental or economic factors during these months. However, other months lack stable variations, demanding further quantitative analysis to assess if this pattern is strictly seasonal. Future research should investigate how fluctuations in copper prices, infrastructure maintenance, and police activities interact to influence theft rates.

 [\[ZZ1\]](#_msoanchor_1)Is this the case in NSW? You only used the data from NSW, no data from Qld were used.

### 6.3 Refining Data Collection for Theft Prevention

To mitigate data limitations, this study recommends enhancing data collection frameworks by increasing temporal granularity from monthly to weekly or daily records, thereby refining theft pattern characterization and improving the model’s sensitivity to abrupt events. Integrating law enforcement intervention metrics (e.g., patrol frequency, case resolution rates, and regulatory intensity) and infrastructure maintenance data (e.g., repair timelines, material replacement) into crime databases would reduce short-term variability, enhancing model robustness.

It is recommended that relevant authorities establish a regional information-sharing platform modeled after the Scrap Theft Alert system launched by the Institute of Scrap Recycling Industries (ISRI) ([Institute of Scrap Recycling Industries, 2025]{.underline}). This system has been widely implemented in the United States, enabling real-time reporting and tracking of metal theft incidents. Facilitating intelligence sharing among law enforcement agencies, recycling industry professionals, and infrastructure operators can significantly enhance situational awareness and data integrity, ultimately improving the predictive accuracy of theft trend analysis.

### 6.4 Optimization of Anti-theft and Strategies

Given the significant correlation between overall regional theft rates and traffic copper cable theft, this study recommends prioritizing high-intensity theft prevention measures in high-risk areas. For instance, replacing traditional copper cables with theft-resistant alternatives can reduce their economic value, thereby mitigating the underlying motivation for theft ([Tyschenko, Riley, & Schultz, 2010]{.underline}). Additionally, embedding junction boxes in asphalt and incorporating electronic tagging for location tracking can enhance theft deterrence ([Rosales, 2013]{.underline}). In terms of infrastructure design, tamper-resistant junction boxes and protective enclosures are recommended to enhance physical security and deter unauthorized access ([Rosales, 2013]{.underline}). Incorporating additional load centers into new transportation infrastructure can minimize the length of copper wiring, allowing for the use of thinner wires and decreasing overall copper consumption. This reduction not only diminishes the appeal for theft but also enhances system reliability, as the functionality of other load centers can persist even if one fails ([Rosales, 2013]{.underline}).

In medium-risk areas (i.e., locations with latent criminal attractiveness but without frequent theft incidents), cost-effective and easily deployable physical theft prevention measures should be implemented. For example, filling cable enclosures with concrete or sand can block critical access points and deter unauthorized intrusions ([Queensland Transport and Resources Commission, 2023]{.underline}).

Strict trade regulations for scrap metal dealers should be enforced for low-risk areas to raise transaction thresholds. Establishing a reporting hotline and incentive programs can encourage public participation in reporting theft incidents, thereby increasing crime risks and strengthening social surveillance mechanisms ([Kooi, 2010]{.underline}).

Given that fluctuations in copper prices are a key driver of copper cable theft, it is recommended that government and relevant authorities prioritize collaboration with economic forecasting institutions (such as commodity market monitoring agencies) to anticipate the impact of price fluctuations on theft trends. This proactive strategy would allow for optimizing law enforcement resource allocation and mitigating short-term crime surges associated with rising copper prices.

### 6.5 Legislation and Governance

Scrap metal dealers and the black market serve as major channels for disposing of stolen scrap metal ([Whiteacre, Terheide, & Biggs, 2015]{.underline}). Proper legislation and regulation can restrict the criminal market for trafficked copper cables, addressing this issue at its economically driven endpoint ([Kooi, 2010]{.underline}).

Research findings indicate that legislative interventions in New South Wales have demonstrated significant effectiveness in curbing traffic-related copper cable theft. Similarly, the United Kingdom's Scrap Metal Dealers Act (2013), in conjunction with "Operation Tornado," has been proven to effectively reduce scrap metal theft rates by 30%-50% ([Morgan, Hoare, & Byron, 2015]{.underline}). Both frameworks exhibit strong alignment in legislative objectives and regulatory measures, including the prohibition of cash transactions, mandatory licensing for scrap metal dealers, and compulsory record-keeping of seller identities, transaction details, and material sources. Additionally, both systems empower law enforcement with the authority to conduct surprise inspections and close non-compliant recycling facilities, while establishing information-sharing networks to enhance transaction transparency and prevent black market trade ([Office, 2017]{.underline}; [New South Wales Government, 2016]{.underline}).

The dynamic adaptability of legislation is crucial for long-term crime deterrence ([Casey, 2024]{.underline}). The rigid characteristics of existing scrap metal laws may lead to difficulties in adapting policies to evolving crime patterns and economic fluctuations ([Kysar, 2019]{.underline}). This study proposes the establishment of a data-driven legislative evaluation framework, with regular analysis of crime data to assess regulatory effectiveness, identify legal loopholes, and dynamically adjust policies accordingly. Furthermore, regulatory measures should integrate market oversight with proactive law enforcement to prevent the displacement of criminal activity into the black market ([Morgan & Clarke, 2007]{.underline}). Legislative optimization should incorporate more precise monitoring mechanisms and targeted interventions against illicit scrap metal transactions to ensure a comprehensive and adaptive governance system ([Kysar, 2019]{.underline}).

## 7. Conclusion

This study systematically examines the driving factors behind traffic copper cable theft, utilizing advanced time-series models to reveal the influence of economic, social, and policy variables on theft patterns. The results demonstrate that copper price fluctuations and regional crime rates are the primary determinants of theft incidents, aligning with economic incentive theory and crime opportunity theory. While legislation initially exerts a strong deterrent effect, its long-term effectiveness is limited by black market adaptability and regulatory loopholes. Furthermore, the study finds that unemployment rates and global metal supply-demand dynamics have a weak direct predictive effect on traffic copper cable theft. Model comparison analysis indicates that ARIMAX (1,0,1) achieves the best predictive performance, surpassing log-log regression and the ARIMA-XGBoost ensemble model in capturing crime trends, computing efficiency, and seasonal variations.

Given the limited long-term sustainability of legislative policies, this study emphasizes the necessity of a dynamic legislative framework, real-time market surveillance, and cross-agency law enforcement collaboration. Strengthening regulatory oversight of scrap metal transactions, deploying technology-driven theft prevention measures, and leveraging predictive analytics to optimize law enforcement resource allocation are key strategies for mitigating theft risks. Additionally, the study recommends improving data precision by incorporating high-resolution temporal data and law enforcement intervention variables to enhance model accuracy and policy effectiveness. Furthermore, targeted prevention measures should be implemented in high-risk areas, including reinforced cable protection, electronic tracking systems, and adopting alternative materials to reduce theft incidents effectively.

Traffic copper cable theft remains a complex and persistent challenge requiring a multi-layered, data-driven intervention approach. By integrating predictive modeling, regulatory optimization, and infrastructure-based deterrents, policymakers can formulate more effective long-term strategies to curb theft and enhance transportation infrastructure security. Future research should focus on refining data collection for potential influencing factors, optimizing crime prediction models, investigating the causes of seasonal fluctuations, and assessing the role of global metal market dynamics in shaping metal theft trends.

\[a paragraph should be added here to highlight the reproducibility of the entire analysis.\]

## Reference

1)        Andrews, J. (2020, October 20). How to stop a copper thief: A good disguise. Retrieved from Nvent.com website: https://blog.nvent.com/how-to-stop-a-copper-thief-a-good-disguise/

2)        Askari, S., & Montazerin, N. (2015). A high-order multi-variable Fuzzy Time Series forecasting algorithm based on fuzzy clustering. *Expert Systems with Applications*, *42*(4), 2121–2135. https://doi.org/10.1016/j.eswa.2014.09.036

3)        Australian Bureau of Statistics. (2024a). Consumer Price Index, Australia, December Quarter 2024. Retrieved March 16, 2025, from Australian Bureau of Statistics website: https://www.abs.gov.au/statistics/economy/price-indexes-and-inflation/consumer-price-index-australia/dec-quarter-2024#data-downloads

4)        Australian Bureau of Statistics. (2024b, December 12). National, state and territory population, June 2024. Retrieved from Australian Bureau of Statistics website: https://www.abs.gov.au/statistics/people/population/national-state-and-territory-population/jun-2024#data-downloads

5)        Australian Bureau of Statistics. (2025). Labour Force, Australia, January 2025. Retrieved from Australian Bureau of Statistics website: https://www.abs.gov.au/statistics/labour/employment-and-unemployment/labour-force-australia/jan-2025#data-downloads

6)        Bennett, L. (2008). Assets under attack: Metal theft, the built environment and the dark side of the global recycling market assets under attack: Metal theft, the built environment and the dark side of the global recycling market. Retrieved from https://shura.shu.ac.uk/683/1/fulltext.pdf

7)        Benoit, K. (2011). *Linear Regression Models with Logarithmic Transformations*. Retrieved

8)        Braga, A. A., & Weisburd, D. L. (2011). The Effects of Focused Deterrence Strategies on Crime. *Journal of Research in Crime and Delinquency*, *49*(3), 323–358. https://doi.org/10.1177/0022427811419368

9)        Bureau of Crime Statistics and Research. (2024). Criminal incident data. Retrieved from BOCSAR homepage website: https://bocsar.nsw.gov.au/statistics-dashboards/open-datasets/criminal-offences-data.html

10)    Casey, W. M. (2024). Translational criminology and law enforcement. American Journal of Criminal Justice. https://doi.org/10.1007/s12103-024-09779-3

11)    CEIC. (2023). Global Economic Data, Indicators, Charts & Forecasts \| CEIC. Retrieved from Ceicdata.com website: https://www.ceicdata.com/en

12)    Chen, S.-M., & Tanuwijaya, K. (2011). Multivariate fuzzy forecasting based on fuzzy time series and automatic clustering techniques. *Expert Systems with Applications*, *38*(8), 10594–10605. https://doi.org/10.1016/j.eswa.2011.02.098

13)    Coccia, M., Cohn, E. G., & Kakar, S. (2024). How immigration, level of unemployment, and income inequality affect crime in Europe. *Crime Law and Social Change*. https://doi.org/10.1007/s10611-024-10144-y

14)    Congressional Budget Office. (2013, August). S. 394, Metal Theft Prevention Act of 2013. Retrieved March 19, 2025, from Congressional Budget Office website: https://www.cbo.gov/publication/44481

15)    Edward, G., & Gwilym Meirion Jenkins. (1970). *Time series analysis : forecasting and control*. San Francisco, Fl: Holden-Day.

16)    Esraa Haydier, Nasradeen Albarwari, & Ali, T. (2023). The Comparison Between VAR and ARIMAX Time Series Models in Forecasting. *IRAOI JOURNAL of STATISTICAL SCIENCES*, *20*(2), 249–262. https://doi.org/10.33899/iqjoss.2023.181260

17)    Farrell, G. (2015). Crime concentration theory. *Crime Prevention and Community Safety*, *17*(4), 233–248. https://doi.org/10.1057/cpcs.2015.17

18)    Federal Reserve Bank of Atlanta. (2024). China’s GDP and Consumption: New Quarterly Data. Retrieved March 16, 2025, from Atlantafed.org website: https://www.atlantafed.org/cqer/research/china-gdp-consumption

19)    Fell, E., James, O., Dienes, H., Shah, N., & Grimshaw, J. (2019). *Understanding organised crime 2015/16 Estimating the scale and the social and economic costs Second edition Research Report 103*.

20)    Geldenhuys, K. (2024). Copper Cable Theft: Dangerous and costly. *Servamus Community-based Safety and Security Magazine*, *117*(1), 30-35.

21)    General Administration of Customs of China (GACC). (2024). *China’s import and export statistics of non-ferrous metals*. Retrieved from CEIC Data https://www.ceicdata.com (Accessed March 2024).

22)    Hyndman, R. J., & Athanasopoulos, G. (2018). *Forecasting : Principles and Practice* (2nd ed.). Heathmont, Vic.: Otexts. Retrieved from https://otexts.com/fpp2/

23)    Hyndman, R. J., & Khandakar, Y. (2008). Automatic Time Series Forecasting: TheforecastPackage for*R*. *Journal of Statistical Software*, *27*(3). https://doi.org/10.18637/jss.v027.i03

24)    Institute of Scrap Recycling Industries. (2025). ScrapTheftAlert. Retrieved March 18, 2025, from Scraptheftalert.com website: https://www.scraptheftalert.com/

25)    Joos Korstanje. (2021). *The ARMA Model*. 89–104. https://doi.org/10.1007/978-1-4842-7150-6_5

26)    Kooi, B. (2010). Problem-Oriented guides for police problem-specific guides series no. 58. U.S. Department of Justice, Office of Community Oriented Policing Services.

27)    Kysar, R. M. (2019). Dynamic Legislation. *University of Pennsylvania Law Review*, *167*(4), 809–868. Retrieved from https://www.jstor.org/stable/45389476?seq=1

28)    Leukfeldt, E. R., & Yar, M. (2016). Applying Routine Activity Theory to Cybercrime: a Theoretical and Empirical Analysis. *Deviant Behavior*, *37*(3), 263–280. https://doi.org/10.1080/01639625.2015.1012409

29)    Ludlow, L., & Perez, S. (2018). Addressing Autocorrelation in Time Series Data: A Comparison of Four Analytic Methods Using Data from College Course Evaluations. *General Linear Model Journal*, *44*(1), 11–23. https://doi.org/10.31523/glmj.044001.002

30)    Macrotrends. (2023). Copper Prices - 45 Year Historical Chart. Retrieved from Macrotrends.net website: https://www.macrotrends.net/1476/copper-prices-historical-chart-data

31)    McDowall, D., Loftin, C., & Pate, M. (2011). Seasonal cycles in crime, and their variability. Journal of Quantitative Criminology, 28(3), 389–410. https://doi.org/10.1007/s10940-011-9145-7

32)    Mmakwena, M. (2022). An evaluation of the impact of cable theft on free flow of traffic in South Africa. *International journal of research in business and social science*, *11*(6), 542-551.

33)    Modipa, M. (2022). An evaluation of the impact of cable theft on free flow of traffic in South Africa. International Journal of Research in Business and Social Science (2147- 4478), 11(6), 542–551. https://doi.org/10.20525/ijrbs.v11i6.1968

34)    Morgan, N., Hoare, J., & Byron, C. (2015). *An evaluation of government/law enforcement interventions aimed at reducing metal theft*. Research Report 80. London: Home Office.

35)    Muhle Mthombeni, Bheki Makhanya, & Harm, J. (2024). Assessing strategies to mitigate cable theft in the south african railway sector. 5th African Conference on Industrial Engineering and Operations Management, South Africa, Johannesburg, South Africa, 366–378. https://doi.org/10.46254/af05.20240099

36)    METAL THEFT PREVENTION ACT OF 2013 , 800.424.7827 (National Sheriffs Association 2013).

37)    New South Wales Government. (2016). View - NSW legislation. Retrieved from Nsw.gov.au website: https://legislation.nsw.gov.au/view/whole/html/inforce/current/act-2016-042

38)    Office, H. (2017, December 11). Review of the Scrap Metal Dealers Act 2013. Retrieved from GOV.UK website: https://www.gov.uk/government/publications/review-of-the-scrap-metal-dealers-act-2013

39)    Othman, S. (2017). Comparison Between Forecasting ARIMA and ARIMAX Method. *ZANCO Journal of Pure and Applied Sciences*, *28*(6), 158–165. Retrieved from https://www.researchgate.net/publication/376032854_Comparison_Between_Forecasting_ARIMA_and_ARIMAX_Method

40)    Paoli, L. (2017). The paradoxes of organized crime. *Routledge EBooks*, 295–342. https://doi.org/10.4324/9781315084565-20

41)    Pretorius, W. L. (2015). A Criminological Analysis of Copper Cable Theft in Gauteng. University of South Africa, Pretoria.

42)    Queensland Transport and Resources Committee. (2023). TRANSPORT AND RESOURCES COMMITTEE PUBLIC BRIEFING-INQUIRY INTO SCRAP METAL THEFT TRANSCRIPT OF PROCEEDINGS. In Queensland Parliament. Retrieved from https://www.parliament.qld.gov.au/Work-of-Committees/Committees/Committee-Details?cid=173&id=4273

43)    Reiss, A. J. (1986). Why Are Communities Important in Understanding Crime? *Crime and Justice*, *8*, 1–33. https://doi.org/10.1086/449118

44)    Renaud, K. M., Manley, R., & Nassar, N. T. (2023). A comparison of copper use in China and India as a proxy for their economic development. *Resources Policy*, *80*, 103195. https://doi.org/10.1016/j.resourpol.2022.103195

45)    Rosales, A. (2013). *Preliminary Investigation Design Practices and Products for Deterring Copper Wire Theft Executive Summary Background*. Retrieved from https://dot.ca.gov/-/media/dot-media/programs/research-innovation-system-information/documents/preliminary-investigations/copper-theft-pi-a11y.pdf

46)    Schoenfelder, J., & Center, T. (2009, October). Options for reducing copper theft : final report 657. Retrieved March 15, 2025, from Bts.gov website: https://rosap.ntl.bts.gov/view/dot/17912

47)    Sidebottom, A., Ashby, M., & Johnson, S. D. (2014). Copper cable theft. Journal of Research in Crime and Delinquency, 51(5), 684–700. https://doi.org/10.1177/0022427814521216

48)    Sidebottom, A., Belur, J., Bowers, K., Tompson, L., & Johnson, S. D. (2011). Theft in Price-Volatile Markets: On the Relationship between Copper Price and Copper cable theft. Journal of Research in Crime and Delinquency, 48(3), 396–418. https://doi.org/10.1177/0022427810393021

49)    South African Government. (2022, November 30). Trade and Industry on measures to restrict scrap metal trade. Retrieved from Republic of South Africa: https://www.gov.za/news/media-statements/trade-and-industry-measures- restrict-scrap-metal-trade-30-nov-2022

50)    Stern, D. I. (2011, September 30). From Correlation to Granger Causality. Retrieved from papers.ssrn.com website: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1959624

51)    Tyschenko, P. T., Riley, R., & Schultz, C. (2010, December). Cutting Out Copper Theft. Retrieved March 18, 2025, from Tdworld.com website: https://www.tdworld.com/home/article/20969248/cutting-out-copper-theft

52)    van Elteren, C., Vasconcelos, V. V., & Lees, M. (2024). Criminal organizations exhibit hysteresis, resilience, and robustness by balancing security and efficiency. Scientific Reports, 14(1). https://doi.org/10.1038/s41598-024-68445-0

53)    Whiteacre, K., Terheide, D., & Biggs, B. (2015). Metal theft and repeat victimization. *Crime Prevention and Community Safety*, *17*(3), 139–155. https://doi.org/10.1057/cpcs.2015.6

54)    Wikström, P.-O. H., & Kroneberg, C. (2021). Analytic Criminology: Mechanisms and Methods in the Explanation of Crime and its Causes. *Annual Review of Criminology*, *5*(1). https://doi.org/10.1146/annurev-criminol-030920-091320

55)    Yazdani, F. (2024). Assessment of Copper cable theft in Caltrans District 7 Electrical Systems. Retrieved January 8, 2025, from https://transweb.sjsu.edu/research/2368-Copper-Theft-Caltrans-District7-Electrical-Systems

## Appendix I log_log model

```{r}
# Appendix
# log_log Model summary
summary(log_log_model_Final)
library(gt)
library(broom)
library(dplyr)

# 提取系数结果
coef_df_loglog <- tidy(coeftest(log_log_model_Final))

# 重命名列
colnames(coef_df_loglog) <- c("Coefficients", "Estimate", "Std_Error", "Z_value", "P_value")

# 替换变量名称（如需添加更多请补充）
coef_df_loglog <- coef_df_loglog %>%
  mutate(Coefficients = case_when(
    Coefficients == "(Intercept)" ~ "Intercept",
    Coefficients == "Total_theft.lag" ~ "Total theft rate (Lag 1)",
    Coefficients == "Copper_price.lag" ~ "Copper price (Lag 1)",
    Coefficients == "intervention.lag" ~ "Intervention (Lag 1)",
    Coefficients == "May" ~ "May",
    Coefficients == "Jun" ~ "June",
    Coefficients == "Sep" ~ "September",
    TRUE ~ Coefficients
  ))

# 添加显著性星号
coef_df_loglog <- coef_df_loglog %>%
  mutate(Significance = case_when(
    P_value < 0.001 ~ "***",
    P_value < 0.01 ~ "**",
    P_value < 0.05 ~ "*",
    P_value < 0.1 ~ ".",
    TRUE ~ ""
  ))

# 美化格式
coef_df_loglog <- coef_df_loglog %>%
  mutate(
    Estimate = round(Estimate, 4),
    Std_Error = round(Std_Error, 4),
    P_value = formatC(P_value, format = "e", digits = 2)
  )

# 创建 gt 表格
coef_table_loglog <- coef_df_loglog %>%
  select(Coefficients, Estimate, Std_Error, P_value, Significance) %>%
  gt() %>%
  tab_header(title = md("**Log-Log model coefficients for traffic copper cable theft analysis**")) %>%
  cols_label(
    Coefficients = "Coefficients",
    Estimate = "Estimate",
    Std_Error = "Std Error",
    P_value = "P-value",
    Significance = ""
  ) %>%
  cols_width(
    Coefficients ~ px(200),
    Estimate ~ px(100),
    Std_Error ~ px(100),
    P_value ~ px(120),
    Significance ~ px(60)
  ) %>%
  cols_align(align = "center", columns = c(Estimate, Std_Error, P_value, Significance)) %>%
  tab_source_note(
    md("Note: Coefficients are presented with their standard errors and P-values. Significance levels: *** P < 0.001, ** P < 0.01, * P < 0.05, . P < 0.1")
  )

# 查看表格
coef_table_loglog

# 保存为 PNG（如需转换为 TIFF，见下方说明）
gtsave(coef_table_loglog, filename = "loglog_coefficient_table.png")
```

```{r}
#####log_log模型的ACF与PACF#####
library(forecast)
library(ggplot2)

# === 1. 获取 log-log 模型残差 ===
residuals_loglog <- resid(log_log_model_Final)

# === 2. ACF 图 ===
acf_loglog_plot <- ggAcf(residuals_loglog, lag.max = 30) +
  labs(
    title = "ACF of Log-Log Model Residuals",
    x = "Lag (Months)",
    y = "Autocorrelation"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
    axis.title.x = element_text(face = "bold"),
    axis.title.y = element_text(face = "bold"),
    axis.text = element_text(color = "black"),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA)
  )

# === 3. PACF 图 ===
pacf_loglog_plot <- ggPacf(residuals_loglog, lag.max = 30) +
  labs(
    title = "PACF of Log-Log Model Residuals",
    x = "Lag (Months)",
    y = "Partial Autocorrelation"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
    axis.title.x = element_text(face = "bold"),
    axis.title.y = element_text(face = "bold"),
    axis.text = element_text(color = "black"),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA)
  )

# === 4. 显示图形 ===
print(acf_loglog_plot)
print(pacf_loglog_plot)
```

## Appendix II XG Boost model

```{r}
#Appendix
##############################
###XG Boost model的SHAP计算###
##############################
# === 加载必要包 ===
if (!require("shapviz")) install.packages("shapviz")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("dplyr")) install.packages("dplyr")

library(shapviz)
library(ggplot2)
library(dplyr)

# === 1. 计算 SHAP 值（XGBoost 必须使用 predcontrib = TRUE）===
shap_values_train <- predict(xgb_final, dtrain, predcontrib = TRUE)

# === 2. 移除 BIAS 项（bias 是模型截距，不计入变量贡献）===
shap_values_train_fixed <- shap_values_train[, !colnames(shap_values_train) %in% "BIAS", drop = FALSE]

# === 3. 维度检查（建议确保无错配）===
print(dim(shap_values_train_fixed))  # 应为 (样本数, 特征数)
print(dim(X_train))

# === 4. 构建 SHAP 可视化对象（如需进一步交互可用 shapviz 专属函数）===
shap_obj_train <- shapviz(shap_values_train_fixed, X = X_train)

# === 5. 计算每个特征的平均 SHAP 绝对值 & 百分比贡献 ===
shap_means <- colMeans(abs(shap_values_train_fixed))
shap_pct <- shap_means / sum(shap_means) * 100  # 重要性百分比

# === 6. 构建数据框并排序 ===
shap_df <- data.frame(
  Feature = names(shap_means),
  Mean_SHAP_Value = shap_means,
  Importance_Percentage = shap_pct
) %>%
  arrange(desc(Importance_Percentage))

print(shap_df)  # 可查看最终贡献排序表

# === 7. 构造数据框用于 ggplot2 可视化（保持因变量排序）===
shap_plot_df <- shap_df %>%
  arrange(Importance_Percentage) %>%  # 从小到大显示，图上从下往上是重要变量
  mutate(Feature = factor(Feature, levels = Feature))  # 控制变量顺序

# === 8. 绘图（百分比方式）===
shap_plot <- ggplot(shap_plot_df, aes(x = Importance_Percentage, y = Feature)) +
  geom_bar(stat = "identity", fill = "#1F77B4", width = 0.6) +  # 深蓝色，专业风格
  labs(
    title = "SHAP Feature Importance (Percentage View)",
    x = "Relative Importance (%)",
    y = "Predictor Variables"
  ) +
  theme_minimal(base_size = 12) +
theme(
  plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
  axis.title.x = element_text(face = "bold", size = 12),
  axis.title.y = element_text(face = "bold", size = 12),
  axis.text = element_text(color = "black", size = 10),
  panel.grid.major.y = element_blank(),
  panel.grid.minor = element_blank(),
  
  # 修复背景色问题
  plot.background = element_rect(fill = "white", color = NA),
  panel.background = element_rect(fill = "white", color = NA)
)

#  高分辨率导出
ggsave(
  filename = "SHAP_feature_importance_percentage.png",
  plot = shap_plot,
  dpi = 300,
  width = 6,
  height = 4
)

print(shap_plot)
```

```{r}
run_xgb_model <- function(formula_str, model_name, train_data, test_data) {
  # 1. 构建特征矩阵
  X_train <- model.matrix(as.formula(formula_str), data = train_data)
  X_test  <- model.matrix(as.formula(formula_str), data = test_data)
  
  dtrain <- xgb.DMatrix(data = X_train, label = train_data$log_cases)
  dtest <- xgb.DMatrix(data = X_test)
  
  # 2. 网格搜索
  grid <- expand.grid(
    max_depth = c(3, 5, 7),
    eta = c(0.01, 0.05, 0.1),
    subsample = c(0.6, 0.8),
    colsample_bytree = c(0.6, 0.8)
  )
  
  best_rmse <- Inf
  for (i in 1:nrow(grid)) {
    param <- list(
      objective = "reg:squarederror",
      eval_metric = "rmse",
      max_depth = grid$max_depth[i],
      eta = grid$eta[i],
      subsample = grid$subsample[i],
      colsample_bytree = grid$colsample_bytree[i]
    )
    
    set.seed(123)
    cv_result <- xgb.cv(
      params = param,
      data = dtrain,
      nrounds = 300,
      nfold = 5,
      early_stopping_rounds = 10,
      verbose = 0
    )
    
    if (cv_result$evaluation_log$test_rmse_mean[cv_result$best_iteration] < best_rmse) {
      best_rmse <- cv_result$evaluation_log$test_rmse_mean[cv_result$best_iteration]
      best_param <- param
      best_nrounds <- cv_result$best_iteration
    }
  }
  
  # 3. 训练最终模型
  model <- xgb.train(params = best_param, data = dtrain, nrounds = best_nrounds, verbose = 0)
  xgb_pred <- predict(model, dtest)
  pred_cases <- exp(xgb_pred) - 1
  
  # 4. 误差指标（基于原始尺度）
  actual <- test_data$cases
  mape <- mean(abs((actual - pred_cases) / actual)) * 100
  rmse <- sqrt(mean((actual - pred_cases)^2))
  mae <- mean(abs(actual - pred_cases))
  mpe <- mean((actual - pred_cases) / actual) * 100
  r2 <- 1 - sum((actual - pred_cases)^2) / sum((actual - mean(actual))^2)
  
  # 返回结果行
  data.frame(
    Model = model_name,
    MAPE = round(mape, 2),
    RMSE = round(rmse, 2),
    MAE = round(mae, 2),
    MPE = round(mpe, 2),
    R_squared = round(r2, 4)
  )
}

# 保存所有结果
results <- list()

# 全变量模型
results[["All"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Copper_price.lag +
     log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag + intervention.lag +
     log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "All",
  train_data, test_data
)

# 剔除 Copper_price
results[["No_Copper"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Scrap_Imports_CN.lag +
     log_Unwork_NSW.lag + intervention.lag + log_t_since.lag +
     Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_Copper",
  train_data, test_data
)

# 剔除 Theft_rate
results[["No_Theft"]] <- run_xgb_model(
  "~ log_Copper_price.lag +
     log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag + intervention.lag +
     log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_Theft",
  train_data, test_data
)

# 剔除 t_since
results[["No_t_since"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Copper_price.lag +
     log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag + intervention.lag +
     + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_t_since",
  train_data, test_data
)


# 剔除 intervention
results[["No_intervention"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Copper_price.lag +
     log_Scrap_Imports_CN.lag + log_Unwork_NSW.lag +
     log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_intervention",
  train_data, test_data
)


# 剔除 Scrap_inmports_CN
results[["No_Scrap"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Copper_price.lag +
     log_Unwork_NSW.lag + intervention.lag +
     log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_Scrap",
  train_data, test_data
)


# 剔除 Unwork_NSW
results[["No_Unwork"]] <- run_xgb_model(
  "~ log_Total_theft.lag + log_Copper_price.lag +
     log_Scrap_Imports_CN.lag + intervention.lag +
     log_t_since.lag + Feb + Mar + APr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec",
  "No_Unwork",
  train_data, test_data
)

# 结果汇总表
final_df <- do.call(rbind, results)
print(final_df)


# === Step 1: 加载必要的包 ===
library(gridExtra)
library(ggplot2)
library(cowplot)
library(grid)
library(gtable)
library(dplyr)

# === Step 2: 格式化数据（保留4位小数）===
final_df_formatted <- final_df %>%
  mutate_if(is.numeric, ~ round(., 4)) %>%
  mutate(Model = rownames(final_df)) %>%
  select(Model, everything())

# === Step 3: 创建表格对象（使用经典样式，默认字体）===
clean_table <- ggtexttable(
  final_df_formatted,
  rows = NULL,
  theme = ttheme("classic", base_size = 12)
)

# === Step 4: 创建标题对象（Figure X. 风格，默认字体）===
title_text <- text_grob(
  "Figure X. Performance Impact of Variable Removal in the XGBoost Model",
  face = "bold",
  size = 14
)

# === Step 5: 合并标题和表格 ===
combined_plot <- plot_grid(
  title_text,
  clean_table,
  ncol = 1,
  rel_heights = c(0.15, 1)
)

# === Step 6: 显示图形预览 ===
print(combined_plot)

# === Step 7: 导出高清 PNG 图像 ===
# 强制白色背景（plot_grid 不默认设白底）
combined_plot <- combined_plot + theme(plot.background = element_rect(fill = "white", color = NA))

ggsave(
  filename = "XGBoost_Variable_Impact_Table_With_Title.png",
  plot = combined_plot,
  width = 10,
  height = 5.5,
  dpi = 300
)
```
